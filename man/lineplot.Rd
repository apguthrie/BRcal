% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting_functions.R
\name{lineplot}
\alias{lineplot}
\title{Lineplot for LLO-adjusted Probability Predictions}
\usage{
lineplot(
  x,
  y,
  t_levels = NULL,
  df = NULL,
  Pmc = 0.5,
  event = 1,
  return_df = TRUE,
  epsilon = .Machine$double.eps,
  title = "Line Plot",
  ylab = "Probability",
  xlab = "Posterior Model Probability",
  pt_size = 1.5,
  ln_size = 0.5,
  pt_alpha = 0.35,
  ln_alpha = 0.25,
  font_base = 10,
  ylim = c(0, 1),
  breaks = seq(0, 1, by = 0.2),
  thin_to = NULL,
  thin_percent = NULL,
  thin_by = NULL
)
}
\arguments{
\item{x}{a numeric vector of predicted probabilities of an event. Must only
contain values in [0,1].}

\item{y}{a vector of outcomes corresponding to probabilities in \code{x}. Must
only contain two unique values (one for "events" and one for "non-events").
By default, this function expects a vector of 0s (non-events) and 1s
(events).}

\item{t_levels}{Vector of desired level(s) of calibration at which to plot
contours.}

\item{df}{Dataframe returned by previous call to lineplot() specially
formatted for use in this function. Only used for faster plotting when
making minor cosmetic changes to a previous call.}

\item{Pmc}{The prior model probability for the calibrated model \eqn{M_c}.}

\item{event}{Value in \code{y} that represents an "event".  Default value is 1.}

\item{return_df}{Logical.  If \code{TRUE}, the dataframe used to build this plot
will be returned.}

\item{epsilon}{Amount by which probabilities are pushed away from 0 or 1
boundary for numerical stability. If a value in \code{x} < \code{epsilon}, it will be
replaced with \code{epsilon}.  If a value in \code{x} > \code{1-epsilon}, that value will
be replaced with \code{1-epsilon}.}

\item{title}{Plot title.}

\item{ylab}{Label for x-axis.}

\item{xlab}{Label for x-axis.}

\item{pt_size}{Size of plotted points passed to \code{geom_point()}.}

\item{ln_size}{Linewidth of connecting lines passed to \code{geom_line()}.}

\item{pt_alpha}{Transparency of plotted point passed to \code{geom_point()}.}

\item{ln_alpha}{Transparency of connecting lines passed to \code{geom_line()}.}

\item{font_base}{Base font size for \code{ggplot()}.}

\item{ylim}{Vector with bounds for y-axis, must be in [0,1].}

\item{breaks}{Locations along y-axis at which to draw horizontal guidelines,
passed to \code{scale_y_continous()}.}

\item{thin_to}{When non-null, the observations in (x,y) are randomly sampled
without replacement to form a set of size \code{thin_to}.}

\item{thin_percent}{When non-null, the observations in (x,y) are randomly
sampled without replacement to form a set that is \code{thin_percent} * 100\% of
the original size of (x,y).}

\item{thin_by}{When non-null, the observations in (x,y) are thinned by
selecting every \code{thin_by} observation.}
}
\value{
If \code{return_df = TRUE}, a list with the folling attributes is
returned: \item{\code{plot}}{A \code{ggplot} object showing how the predicted
probabilities under MLE recalibration and specified levels of
boldness-recalibration.}
\item{\code{df}}{Dataframe used to create \code{plot}, specially
formatted for use in \code{lineplot()}.}
Otherwise just the \code{ggplot} object of the plot is returned.
}
\description{
Lineplot for LLO-adjusted Probability Predictions
}
\section{Thinning}{


Another approach to speed up the calculations of this function is to thin
the data used. However, this is generally not recommended unless the sample
size is very large as the calculations of the posterior model probability
may change drastically under small sample sizes.  This can lead to
misleading results. Under large sample sizes where thinning is used, note
this is only an approximate visual of the posterior model probability.  We
provide three options for thinning: \code{thin_to}, \code{thin_percent}, and
\code{thin_by}.  Care should be taken in selecting a thinning approach based on
the nature of your data and problem.
}

\references{
Guthrie, A. P., and Franck, C. T. (2024) Boldness-Recalibration
for Binary Event Predictions, \emph{The American Statistician} 1-17.

Wickham, H. (2016) ggplot2: Elegant Graphics for Data Analysis.
Springer-Verlag New York.
}
